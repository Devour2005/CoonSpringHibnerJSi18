<!--suppress SpringSecurityFiltersConfiguredInspection -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <mvc:annotation-driven/>
    <mvc:resources mapping="/resources/**" location="/"/>

    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>


    <!--   <bean id="exceprionTranslationInterceptor"
             class="org.springframework.dao.support.PersistenceExceptionTranslationInterceptor"/>
       <aop:config>
           <aop:advisor advice-ref="exceprionTranslationInterceptor"
                        pointcut="execution(* com.springapp.DAO.UserDao.*(..) )"/>
       </aop:config>-->


    <context:component-scan base-package="com.springapp.*"/>

    <!-- Enable AspectJ style of Spring AOP -->
    <aop:aspectj-autoproxy/>

    <!-- <aop:aspectj-autoproxy proxy-target-class="true">
         <aop:include name="timeCounterAspect" />
     </aop:aspectj-autoproxy>-->


    <bean id="timeCounterAspect" class="com.springapp.Calculation.TimeCountAspect"/>

    <!--  <aop:config>
          <aop:aspect id="timeCount" ref="timeCounterAspect">
              <aop:pointcut id="calculation" expression=
                      "execution(* com.springapp.Calculation.PiCalculator.call(..))"/>
              &lt;!&ndash; Совет, выполняемый и до, и после &ndash;&gt;
              <aop:around
                      pointcut-ref="calculation"
                      method="timeCounterClass"/>
          </aop:aspect>
      </aop:config>
  -->

    <bean id="propertiesPlaceholderConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/db.properties</value>
            </list>
        </property>
    </bean>

    <bean name="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" id="sessionFactory">
        <!--<property name="configLocation" value="classpath*:/hibernate.cfg.xml"/>-->
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.springapp"/>
        <!--<property name="configLocation" value="classpath*:/db.properties"/>-->
        <property name="hibernateProperties">
            <!--  <props>
                  <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                  &lt;!&ndash;<prop key="connection.driver_class">${db.driver}</prop>&ndash;&gt;
                  <prop key="connection.driver_class">com.mysql.jdbc.Driver</prop>
                  <prop key="connection.url">jdbc:mysql://localhost/coonportalsprng</prop>
                  <prop key="connection.username">root</prop>
                  <prop key="connection.password">123qwe</prop>
                  <prop key="connection.pool_size">5</prop>
                  <prop key="dialect">org.hibernate.dialect.MySQLDialect</prop>
                  <prop key="show_sql">true</prop>
                  <prop key="hbm2ddl.auto">update</prop>
                  <prop key="hibernate.connection.autocommit">false</prop>
                  <prop key="current_session_context_class">thread</prop>
                  <prop key="javax.persistence.validation.mode">none</prop>
              </props>-->

            <props>
                <prop key="hibernate.dialect">${db.dialect}</prop>
                <prop key="connection.driver_class">${db.driver}</prop>
                <prop key="connection.url">jdbc:mysql://localhost/coonportalsprng</prop>
                <prop key="connection.username">${db.username}</prop>
                <prop key="connection.password">${db.password}</prop>
                <prop key="connection.pool_size">${db.pool_size}</prop>
                <prop key="hibernate.connection.autocommit">${db.auto_commit}</prop>
                <prop key="dialect">${db.dialect}</prop>
                <prop key="show_sql">${db.show_sql}</prop>
                <prop key="hbm2ddl.auto">update</prop>
                <prop key="current_session_context_class">thread</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
            </props>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>com.springapp.Entity.User</value>
                <value>com.springapp.Entity.Role</value>
                <value>com.springapp.Entity.Computer</value>
                <value>com.springapp.Entity.UserComputer</value>
            </list>
        </property>

    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="${db.driver}"
          p:url="${db.url}"
          p:username="${db.username}"
          p:password="${db.password}"/>
    <!--   <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
       <property name="url" value="jdbc:mysql://localhost/coonportalsprng"/>
       <property name="username" value="root"/>
       <property name="password" value="123qwe"/>
   </bean>
-->

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory">
        <!--<property name="sessionFactory" ref="sessionFactory"/>-->
    </bean>


    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="messages"/>
        <property name="defaultEncoding" value="UTF-8"/>

    </bean>


    <bean class="com.springapp.Exceptions.CustomExceptionResolver">
        <property name="exceptionMappings">
            <map>
                <entry key="com.springapp.exceptions.CustomExceptionResolver" value="/exceptionPages/exceptions"/>
                <!--<entry key="com.springapp.exceptions.TryException" value="/exceptionPages/exceptions" />-->
            </map>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- <property name="exceptionMappings">
             <map>
                 <entry key="com.springapp.exceptions.CustomException"
                        value="/exceptionPages/customException"/>
                 <entry key="com.springapp.exceptions.SecondCustomException"
                        value="/exceptionPages/secondCustomException"/>
             </map>
         </property>-->
        <property name="defaultErrorView" value="/exceptionPages/exceptions"/>
    </bean>


</beans>