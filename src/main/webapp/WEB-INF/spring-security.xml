<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <security:http auto-config="true" access-denied-page="/login"
                   use-expressions="true">
        
        <security:intercept-url pattern="/login" access="permitAll"/>
        <security:intercept-url pattern="/admin"
                                access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/edit" access="permitAll"/>
        <security:intercept-url pattern="/editUser" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/welcome"
                                access="permitAll"/>
        <security:form-login login-page="/login" default-target-url="/login"
                             authentication-failure-url="/nosuchuser"/>
        <security:logout logout-success-url="/login"/>
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service
                    data-source-ref="dataSource"
                    users-by-username-query="select LOGIN, PASSWORD, enabled from USER where LOGIN = ?"
                    authorities-by-username-query="select USER1.LOGIN,
                                                   ROLE1.name from USER USER1, ROLE ROLE1
                                                   where USER1.USER_ID = ROLE1.USER_ID and USER1.LOGIN = ?"/>
        </security:authentication-provider>

     <!--   <security:authentication-provider>
            <security:jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="select login, password, 1
      	                                           from members where login = ?"
                               authorities-by-username-query="select l.login, r.role
      	                                                 from members u, authorities au
       	                                                where u.id = au.user_id and u.username = ?" />
        </security:authentication-provider>-->

        <!--<security:authentication-provider
                user-service-ref="customUserDetailsService">
            <security:password-encoder hash="plaintext" />

        </security:authentication-provider>-->

    </security:authentication-manager>
</beans>